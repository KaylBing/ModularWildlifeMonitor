<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="183693109"><g><title>[[stack]] (2,395,743 samples, 1.30%)</title><rect x="0.0000%" y="549" width="1.3042%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2395743"/><text x="0.2500%" y="559.50"></text></g><g><title>toml::tokens::Tokenizer::next (2,395,743 samples, 1.30%)</title><rect x="0.0000%" y="533" width="1.3042%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2395743"/><text x="0.2500%" y="543.50"></text></g><g><title>[anon] (1,143,694 samples, 0.62%)</title><rect x="1.3042%" y="549" width="0.6226%" height="15" fill="rgb(221,193,54)" fg:x="2395743" fg:w="1143694"/><text x="1.5542%" y="559.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1,143,694 samples, 0.62%)</title><rect x="1.3042%" y="533" width="0.6226%" height="15" fill="rgb(248,212,6)" fg:x="2395743" fg:w="1143694"/><text x="1.5542%" y="543.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (2,604,852 samples, 1.42%)</title><rect x="8.8925%" y="533" width="1.4180%" height="15" fill="rgb(208,68,35)" fg:x="16334918" fg:w="2604852"/><text x="9.1425%" y="543.50"></text></g><g><title>BIO_ctrl (3,964,774 samples, 2.16%)</title><rect x="10.3106%" y="533" width="2.1584%" height="15" fill="rgb(232,128,0)" fg:x="18939770" fg:w="3964774"/><text x="10.5606%" y="543.50">B..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="533" width="2.2043%" height="15" fill="rgb(207,160,47)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="543.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="517" width="2.2043%" height="15" fill="rgb(228,23,34)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="527.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="501" width="2.2043%" height="15" fill="rgb(218,30,26)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="511.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="485" width="2.2043%" height="15" fill="rgb(220,122,19)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="495.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="469" width="2.2043%" height="15" fill="rgb(250,228,42)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="479.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="453" width="2.2043%" height="15" fill="rgb(240,193,28)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="463.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="437" width="2.2043%" height="15" fill="rgb(216,20,37)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="447.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="421" width="2.2043%" height="15" fill="rgb(206,188,39)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="431.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="405" width="2.2043%" height="15" fill="rgb(217,207,13)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="415.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="389" width="2.2043%" height="15" fill="rgb(231,73,38)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="399.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="373" width="2.2043%" height="15" fill="rgb(225,20,46)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="383.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="357" width="2.2043%" height="15" fill="rgb(210,31,41)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="367.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="341" width="2.2043%" height="15" fill="rgb(221,200,47)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="351.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="325" width="2.2043%" height="15" fill="rgb(226,26,5)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="335.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="309" width="2.2043%" height="15" fill="rgb(249,33,26)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="319.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="293" width="2.2043%" height="15" fill="rgb(235,183,28)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="303.50">[..</text></g><g><title>[unknown] (4,049,091 samples, 2.20%)</title><rect x="12.4689%" y="277" width="2.2043%" height="15" fill="rgb(221,5,38)" fg:x="22904544" fg:w="4049091"/><text x="12.7189%" y="287.50">[..</text></g><g><title>[unknown] (3,798,953 samples, 2.07%)</title><rect x="12.6051%" y="261" width="2.0681%" height="15" fill="rgb(247,18,42)" fg:x="23154682" fg:w="3798953"/><text x="12.8551%" y="271.50">[..</text></g><g><title>[unknown] (3,798,953 samples, 2.07%)</title><rect x="12.6051%" y="245" width="2.0681%" height="15" fill="rgb(241,131,45)" fg:x="23154682" fg:w="3798953"/><text x="12.8551%" y="255.50">[..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo3ops13cargo_compile10create_bcx (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="533" width="2.1620%" height="15" fill="rgb(249,31,29)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="543.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo3ops7resolve20resolve_ws_with_opts (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="517" width="2.1620%" height="15" fill="rgb(225,111,53)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="527.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo3ops7resolve21resolve_with_registry (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="501" width="2.1620%" height="15" fill="rgb(238,160,17)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="511.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo3ops7resolve21resolve_with_previous (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="485" width="2.1620%" height="15" fill="rgb(214,148,48)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="495.50">_..</text></g><g><title>_RNvMs1_NtNtCsdafv1eHZXBe_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse13save_no_error (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="469" width="2.1620%" height="15" fill="rgb(232,36,49)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="479.50">_..</text></g><g><title>_RNvMNtNtCsdafv1eHZXBe_5cargo4util6configNtB2_6Config20global_cache_tracker (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="453" width="2.1620%" height="15" fill="rgb(209,103,24)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="463.50">_..</text></g><g><title>_RNvMs0_NtNtCsdafv1eHZXBe_5cargo4core20global_cache_trackerNtB5_18GlobalCacheTracker3new (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="437" width="2.1620%" height="15" fill="rgb(229,88,8)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="447.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4util6sqlite7migrate (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="421" width="2.1620%" height="15" fill="rgb(213,181,19)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="431.50">_..</text></g><g><title>_RNCNvNtNtCsdafv1eHZXBe_5cargo4util6sqlite15basic_migration0B7_ (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="405" width="2.1620%" height="15" fill="rgb(254,191,54)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="415.50">_..</text></g><g><title>_RNvMs_NtCseIu1E0aMlke_8rusqlite16inner_connectionNtB4_15InnerConnection7prepare (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="389" width="2.1620%" height="15" fill="rgb(241,83,37)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="399.50">_..</text></g><g><title>sqlite3_prepare_v3 (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="373" width="2.1620%" height="15" fill="rgb(233,36,39)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="383.50">s..</text></g><g><title>sqlite3LockAndPrepare (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="357" width="2.1620%" height="15" fill="rgb(226,3,54)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="367.50">s..</text></g><g><title>sqlite3Prepare (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="341" width="2.1620%" height="15" fill="rgb(245,192,40)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="351.50">s..</text></g><g><title>sqlite3RunParser (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="325" width="2.1620%" height="15" fill="rgb(238,167,29)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="335.50">s..</text></g><g><title>yy_reduce (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="309" width="2.1620%" height="15" fill="rgb(232,182,51)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="319.50">y..</text></g><g><title>sqlite3EndTable (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="293" width="2.1620%" height="15" fill="rgb(231,60,39)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="303.50">s..</text></g><g><title>sqlite3NestedParse (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="277" width="2.1620%" height="15" fill="rgb(208,69,12)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="287.50">s..</text></g><g><title>sqlite3VMPrintf (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="261" width="2.1620%" height="15" fill="rgb(235,93,37)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="271.50">s..</text></g><g><title>sqlite3_str_vappendf (3,971,384 samples, 2.16%)</title><rect x="14.6732%" y="245" width="2.1620%" height="15" fill="rgb(213,116,39)" fg:x="26953635" fg:w="3971384"/><text x="14.9232%" y="255.50">s..</text></g><g><title>_RNvMsc_NtNtNtCs9rknplY6vU2_5alloc11collections5btree3setINtB5_8BTreeSetNtNtNtCsdafv1eHZXBe_5cargo4util9interning14InternedStringE6insertB1d_ (3,974,856 samples, 2.16%)</title><rect x="16.8352%" y="501" width="2.1639%" height="15" fill="rgb(222,207,29)" fg:x="30925019" fg:w="3974856"/><text x="17.0852%" y="511.50">_..</text></g><g><title>_RNCNvXs_NtNtCsdafv1eHZXBe_5cargo7sources8registryNtB6_14RegistrySourceNtNtB8_6source6Source5querys0_0Ba_ (7,941,201 samples, 4.32%)</title><rect x="18.9990%" y="405" width="4.3231%" height="15" fill="rgb(206,96,30)" fg:x="34899875" fg:w="7941201"/><text x="19.2490%" y="415.50">_RNCN..</text></g><g><title>_RNCNvXs_NtNtCsdafv1eHZXBe_5cargo7sources8replacedNtB6_14ReplacedSourceNtNtB8_6source6Source5query0Ba_ (7,941,201 samples, 4.32%)</title><rect x="18.9990%" y="389" width="4.3231%" height="15" fill="rgb(218,138,4)" fg:x="34899875" fg:w="7941201"/><text x="19.2490%" y="399.50">_RNCN..</text></g><g><title>_RNCNvXs_NtNtCsdafv1eHZXBe_5cargo4core8registryNtB6_15PackageRegistryNtB6_8Registry5querys0_0Ba_ (7,941,201 samples, 4.32%)</title><rect x="18.9990%" y="373" width="4.3231%" height="15" fill="rgb(250,191,14)" fg:x="34899875" fg:w="7941201"/><text x="19.2490%" y="383.50">_RNCN..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4core8registry4lock (7,941,201 samples, 4.32%)</title><rect x="18.9990%" y="357" width="4.3231%" height="15" fill="rgb(239,60,40)" fg:x="34899875" fg:w="7941201"/><text x="19.2490%" y="367.50">_RNvN..</text></g><g><title>_RINvMs1_NtCs2eOKvjPTXmb_9hashbrown3mapINtB6_7HashMapTNtNtNtCsdafv1eHZXBe_5cargo4core9source_id8SourceIdNtNtNtBV_4util9interning14InternedStringEINtNtCs9rknplY6vU2_5alloc3vec3VecTNtNtBT_10package_id9PackageIdIB2j_B2Q_EEENtNtNtCsaqsJ7jMcZrz_3std4hash6random11RandomStateE3getBO_EBV_ (7,941,201 samples, 4.32%)</title><rect x="18.9990%" y="341" width="4.3231%" height="15" fill="rgb(206,27,48)" fg:x="34899875" fg:w="7941201"/><text x="19.2490%" y="351.50">_RINv..</text></g><g><title>_RINvYNtNtNtCsaqsJ7jMcZrz_3std4hash6random11RandomStateNtNtCslpQXAMNzwFQ_4core4hash11BuildHasher8hash_oneRTNtNtNtCsdafv1eHZXBe_5cargo4core9source_id8SourceIdNtNtNtB1M_4util9interning14InternedStringEEB1M_ (3,967,753 samples, 2.16%)</title><rect x="21.1621%" y="325" width="2.1600%" height="15" fill="rgb(225,35,8)" fg:x="38873323" fg:w="3967753"/><text x="21.4121%" y="335.50">_..</text></g><g><title>_RNvXs3_NtNtCslpQXAMNzwFQ_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCsdafv1eHZXBe_5cargo (3,967,753 samples, 2.16%)</title><rect x="21.1621%" y="309" width="2.1600%" height="15" fill="rgb(250,213,24)" fg:x="38873323" fg:w="3967753"/><text x="21.4121%" y="319.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4core8resolver18activate_deps_loop (19,856,200 samples, 10.81%)</title><rect x="16.8352%" y="533" width="10.8094%" height="15" fill="rgb(247,123,22)" fg:x="30925019" fg:w="19856200"/><text x="17.0852%" y="543.50">_RNvNtNtCsdafv1e..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4core8resolver8activate (19,856,200 samples, 10.81%)</title><rect x="16.8352%" y="517" width="10.8094%" height="15" fill="rgb(231,138,38)" fg:x="30925019" fg:w="19856200"/><text x="17.0852%" y="527.50">_RNvNtNtCsdafv1e..</text></g><g><title>_RNvXNtNtCslpQXAMNzwFQ_4core4iter8adaptersINtB2_12GenericShuntINtNtB2_10filter_map9FilterMapINtNtNtCs9rknplY6vU2_5alloc3vec9into_iter8IntoIterTNtNtNtCsdafv1eHZXBe_5cargo4core10dependency10DependencyINtNtB1y_2rc2RcINtNtNtNtB1y_11collections5btree3set8BTreeSetNtNtNtB2m_4util9interning14InternedStringEEEENCNvMNtNtB2k_8resolver9dep_cacheNtB4V_15RegistryQueryer10build_deps0EINtNtB6_6result6ResultNtNtB6_7convert10InfallibleNtCsbiazuoOZYmC_6anyhow5ErrorEENtNtNtB4_6traits8iterator8Iterator4nextB2m_ (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="501" width="8.6456%" height="15" fill="rgb(231,145,46)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="511.50">_RNvXNtNtCsl..</text></g><g><title>_RNvMNtNtNtCsdafv1eHZXBe_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="485" width="8.6456%" height="15" fill="rgb(251,118,11)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="495.50">_RNvMNtNtNtC..</text></g><g><title>_RNvXs_NtNtCsdafv1eHZXBe_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry5query (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="469" width="8.6456%" height="15" fill="rgb(217,147,25)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="479.50">_RNvXs_NtNtC..</text></g><g><title>_RNvXs_NtNtCsdafv1eHZXBe_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source5query (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="453" width="8.6456%" height="15" fill="rgb(247,81,37)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="463.50">_RNvXs_NtNtC..</text></g><g><title>_RNvXs_NtNtCsdafv1eHZXBe_5cargo7sources8registryNtB4_14RegistrySourceNtNtB6_6source6Source5query (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="437" width="8.6456%" height="15" fill="rgb(209,12,38)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="447.50">_RNvXs_NtNtC..</text></g><g><title>_RNvMs_NtNtNtCsdafv1eHZXBe_5cargo7sources8registry5indexNtB4_13RegistryIndex23query_inner_with_online (15,881,344 samples, 8.65%)</title><rect x="18.9990%" y="421" width="8.6456%" height="15" fill="rgb(227,1,9)" fg:x="34899875" fg:w="15881344"/><text x="19.2490%" y="431.50">_RNvMs_NtNtN..</text></g><g><title>_RNvMs_NtNtNtCsdafv1eHZXBe_5cargo7sources8registry5indexNtB4_13RegistryIndex9summaries (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="405" width="4.3225%" height="15" fill="rgb(248,47,43)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="415.50">_RNvM..</text></g><g><title>std::fs::read::inner (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="389" width="4.3225%" height="15" fill="rgb(221,10,30)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="399.50">std::..</text></g><g><title>std::io::default_read_to_end (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="373" width="4.3225%" height="15" fill="rgb(210,229,1)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="383.50">std::..</text></g><g><title>__GI___libc_read (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="357" width="4.3225%" height="15" fill="rgb(222,148,37)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="367.50">__GI_..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="341" width="4.3225%" height="15" fill="rgb(234,67,33)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="351.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="325" width="4.3225%" height="15" fill="rgb(247,98,35)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="335.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="309" width="4.3225%" height="15" fill="rgb(247,138,52)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="319.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="293" width="4.3225%" height="15" fill="rgb(213,79,30)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="303.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="277" width="4.3225%" height="15" fill="rgb(246,177,23)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="287.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="261" width="4.3225%" height="15" fill="rgb(230,62,27)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="271.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="245" width="4.3225%" height="15" fill="rgb(216,154,8)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="255.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="229" width="4.3225%" height="15" fill="rgb(244,35,45)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="239.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="213" width="4.3225%" height="15" fill="rgb(251,115,12)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="223.50">[unkn..</text></g><g><title>[unknown] (7,940,143 samples, 4.32%)</title><rect x="23.3221%" y="197" width="4.3225%" height="15" fill="rgb(240,54,50)" fg:x="42841076" fg:w="7940143"/><text x="23.5721%" y="207.50">[unkn..</text></g><g><title>[unknown] (3,968,978 samples, 2.16%)</title><rect x="25.4839%" y="181" width="2.1607%" height="15" fill="rgb(233,84,52)" fg:x="46812241" fg:w="3968978"/><text x="25.7339%" y="191.50">[..</text></g><g><title>_RNvNtNtNtCsdafv1eHZXBe_5cargo4util4toml7targets20infer_from_directory (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="485" width="2.1673%" height="15" fill="rgb(207,117,47)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="495.50">_..</text></g><g><title>std::sys::unix::fs::readdir (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="469" width="2.1673%" height="15" fill="rgb(249,43,39)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="479.50">s..</text></g><g><title>__opendir (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="453" width="2.1673%" height="15" fill="rgb(209,38,44)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="463.50">_..</text></g><g><title>__GI___open64_nocancel (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="437" width="2.1673%" height="15" fill="rgb(236,212,23)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="447.50">_..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="421" width="2.1673%" height="15" fill="rgb(242,79,21)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="431.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="405" width="2.1673%" height="15" fill="rgb(211,96,35)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="415.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="389" width="2.1673%" height="15" fill="rgb(253,215,40)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="399.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="373" width="2.1673%" height="15" fill="rgb(211,81,21)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="383.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="357" width="2.1673%" height="15" fill="rgb(208,190,38)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="367.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="341" width="2.1673%" height="15" fill="rgb(235,213,38)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="351.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="325" width="2.1673%" height="15" fill="rgb(237,122,38)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="335.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="309" width="2.1673%" height="15" fill="rgb(244,218,35)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="319.50">[..</text></g><g><title>[unknown] (3,981,265 samples, 2.17%)</title><rect x="27.6446%" y="293" width="2.1673%" height="15" fill="rgb(240,68,47)" fg:x="50781219" fg:w="3981265"/><text x="27.8946%" y="303.50">[..</text></g><g><title>_RNvNtNtNtCsdafv1eHZXBe_5cargo4util4toml7targets7targets (7,960,829 samples, 4.33%)</title><rect x="27.6446%" y="501" width="4.3338%" height="15" fill="rgb(210,16,53)" fg:x="50781219" fg:w="7960829"/><text x="27.8946%" y="511.50">_RNvN..</text></g><g><title>__GI___libc_free (3,979,564 samples, 2.17%)</title><rect x="29.8119%" y="485" width="2.1664%" height="15" fill="rgb(235,124,12)" fg:x="54762484" fg:w="3979564"/><text x="30.0619%" y="495.50">_..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4util4toml13read_manifest (11,938,265 samples, 6.50%)</title><rect x="27.6446%" y="533" width="6.4990%" height="15" fill="rgb(224,169,11)" fg:x="50781219" fg:w="11938265"/><text x="27.8946%" y="543.50">_RNvNtNtC..</text></g><g><title>_RNvNtNtCsdafv1eHZXBe_5cargo4util4toml16to_real_manifest (11,938,265 samples, 6.50%)</title><rect x="27.6446%" y="517" width="6.4990%" height="15" fill="rgb(250,166,2)" fg:x="50781219" fg:w="11938265"/><text x="27.8946%" y="527.50">_RNvNtNtC..</text></g><g><title>_RNvXsa_NtCs9rknplY6vU2_5alloc5boxedINtB5_3BoxNtNtNtCsdafv1eHZXBe_5cargo12util_schemas8manifest11TomlPackageENtNtCslpQXAMNzwFQ_4core5clone5Clone5cloneBN_ (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="501" width="2.1653%" height="15" fill="rgb(242,216,29)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="511.50">_..</text></g><g><title>_RNvXsI_NtCs4y85XaLmXxs_4toml5valueNtB5_5ValueNtNtCslpQXAMNzwFQ_4core5clone5Clone5clone (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="485" width="2.1653%" height="15" fill="rgb(230,116,27)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="495.50">_..</text></g><g><title>_RINvNvXs0_NtNtNtCs9rknplY6vU2_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCslpQXAMNzwFQ_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs4y85XaLmXxs_4toml5value5ValueNtNtBe_5alloc6GlobalECsdafv1eHZXBe_5cargo (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="469" width="2.1653%" height="15" fill="rgb(228,99,48)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="479.50">_..</text></g><g><title>_RNvXsI_NtCs4y85XaLmXxs_4toml5valueNtB5_5ValueNtNtCslpQXAMNzwFQ_4core5clone5Clone5clone (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="453" width="2.1653%" height="15" fill="rgb(253,11,6)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="463.50">_..</text></g><g><title>_RINvNvXs0_NtNtNtCs9rknplY6vU2_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCslpQXAMNzwFQ_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs4y85XaLmXxs_4toml5value5ValueNtNtBe_5alloc6GlobalECsdafv1eHZXBe_5cargo (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="437" width="2.1653%" height="15" fill="rgb(247,143,39)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="447.50">_..</text></g><g><title>_RNvXsI_NtCs4y85XaLmXxs_4toml5valueNtB5_5ValueNtNtCslpQXAMNzwFQ_4core5clone5Clone5clone (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="421" width="2.1653%" height="15" fill="rgb(236,97,10)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="431.50">_..</text></g><g><title>_RINvNvXs0_NtNtNtCs9rknplY6vU2_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCslpQXAMNzwFQ_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringNtNtCs4y85XaLmXxs_4toml5value5ValueNtNtBe_5alloc6GlobalECsdafv1eHZXBe_5cargo (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="405" width="2.1653%" height="15" fill="rgb(233,208,19)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="415.50">_..</text></g><g><title>_RNvXsI_NtCs4y85XaLmXxs_4toml5valueNtB5_5ValueNtNtCslpQXAMNzwFQ_4core5clone5Clone5clone (3,977,436 samples, 2.17%)</title><rect x="31.9784%" y="389" width="2.1653%" height="15" fill="rgb(216,164,2)" fg:x="58742048" fg:w="3977436"/><text x="32.2284%" y="399.50">_..</text></g><g><title>__GI___libc_malloc (2,741,109 samples, 1.49%)</title><rect x="34.1436%" y="533" width="1.4922%" height="15" fill="rgb(220,129,5)" fg:x="62719484" fg:w="2741109"/><text x="34.3936%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (3,972,470 samples, 2.16%)</title><rect x="35.6358%" y="533" width="2.1626%" height="15" fill="rgb(242,17,10)" fg:x="65460593" fg:w="3972470"/><text x="35.8858%" y="543.50">_..</text></g><g><title>regex::compile::Compiler::c (995,526 samples, 0.54%)</title><rect x="37.7984%" y="485" width="0.5420%" height="15" fill="rgb(242,107,0)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="495.50"></text></g><g><title>regex::compile::Compiler::c (995,526 samples, 0.54%)</title><rect x="37.7984%" y="469" width="0.5420%" height="15" fill="rgb(251,28,31)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="479.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (995,526 samples, 0.54%)</title><rect x="37.7984%" y="453" width="0.5420%" height="15" fill="rgb(233,223,10)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="463.50"></text></g><g><title>regex::compile::Compiler::c_class (995,526 samples, 0.54%)</title><rect x="37.7984%" y="437" width="0.5420%" height="15" fill="rgb(215,21,27)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="447.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (995,526 samples, 0.54%)</title><rect x="37.7984%" y="421" width="0.5420%" height="15" fill="rgb(232,23,21)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="431.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="405" width="0.5420%" height="15" fill="rgb(244,5,23)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="415.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="389" width="0.5420%" height="15" fill="rgb(226,81,46)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="399.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="373" width="0.5420%" height="15" fill="rgb(247,70,30)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="383.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="357" width="0.5420%" height="15" fill="rgb(212,68,19)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="367.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="341" width="0.5420%" height="15" fill="rgb(240,187,13)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="351.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="325" width="0.5420%" height="15" fill="rgb(223,113,26)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="335.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="309" width="0.5420%" height="15" fill="rgb(206,192,2)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="319.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="293" width="0.5420%" height="15" fill="rgb(241,108,4)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="303.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="277" width="0.5420%" height="15" fill="rgb(247,173,49)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="287.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="261" width="0.5420%" height="15" fill="rgb(224,114,35)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="271.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="245" width="0.5420%" height="15" fill="rgb(245,159,27)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="255.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="229" width="0.5420%" height="15" fill="rgb(245,172,44)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="239.50"></text></g><g><title>[unknown] (995,526 samples, 0.54%)</title><rect x="37.7984%" y="213" width="0.5420%" height="15" fill="rgb(236,23,11)" fg:x="69433063" fg:w="995526"/><text x="38.0484%" y="223.50"></text></g><g><title>regex::exec::ExecBuilder::build (2,034,655 samples, 1.11%)</title><rect x="37.7984%" y="533" width="1.1076%" height="15" fill="rgb(205,117,38)" fg:x="69433063" fg:w="2034655"/><text x="38.0484%" y="543.50"></text></g><g><title>regex::compile::Compiler::compile (2,034,655 samples, 1.11%)</title><rect x="37.7984%" y="517" width="1.1076%" height="15" fill="rgb(237,72,25)" fg:x="69433063" fg:w="2034655"/><text x="38.0484%" y="527.50"></text></g><g><title>regex::compile::Compiler::c (2,034,655 samples, 1.11%)</title><rect x="37.7984%" y="501" width="1.1076%" height="15" fill="rgb(244,70,9)" fg:x="69433063" fg:w="2034655"/><text x="38.0484%" y="511.50"></text></g><g><title>regex::compile::Compiler::c_repeat_zero_or_one (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="485" width="0.5657%" height="15" fill="rgb(217,125,39)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="495.50"></text></g><g><title>regex::compile::Compiler::c (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="469" width="0.5657%" height="15" fill="rgb(235,36,10)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="479.50"></text></g><g><title>regex::compile::Compiler::c (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="453" width="0.5657%" height="15" fill="rgb(251,123,47)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="463.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="437" width="0.5657%" height="15" fill="rgb(221,13,13)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="447.50"></text></g><g><title>regex::compile::Compiler::c_concat (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="421" width="0.5657%" height="15" fill="rgb(238,131,9)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="431.50"></text></g><g><title>regex::compile::Compiler::c_class (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="405" width="0.5657%" height="15" fill="rgb(211,50,8)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="415.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1,039,129 samples, 0.57%)</title><rect x="38.3404%" y="389" width="0.5657%" height="15" fill="rgb(245,182,24)" fg:x="70428589" fg:w="1039129"/><text x="38.5904%" y="399.50"></text></g><g><title>rustup::cli::common::set_globals (965,505 samples, 0.53%)</title><rect x="38.9060%" y="517" width="0.5256%" height="15" fill="rgb(242,14,37)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="527.50"></text></g><g><title>rustup::config::Cfg::resolve_toolchain (965,505 samples, 0.53%)</title><rect x="38.9060%" y="501" width="0.5256%" height="15" fill="rgb(246,228,12)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="511.50"></text></g><g><title>rustup::dist::dist::PartialToolchainDesc::resolve (965,505 samples, 0.53%)</title><rect x="38.9060%" y="485" width="0.5256%" height="15" fill="rgb(213,55,15)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="495.50"></text></g><g><title>rustup::dist::triple::PartialTargetTriple::new (965,505 samples, 0.53%)</title><rect x="38.9060%" y="469" width="0.5256%" height="15" fill="rgb(209,9,3)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="479.50"></text></g><g><title>std::sys_common::once::futex::Once::call (965,505 samples, 0.53%)</title><rect x="38.9060%" y="453" width="0.5256%" height="15" fill="rgb(230,59,30)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="463.50"></text></g><g><title>regex::re_unicode::Regex::new (965,505 samples, 0.53%)</title><rect x="38.9060%" y="437" width="0.5256%" height="15" fill="rgb(209,121,21)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="447.50"></text></g><g><title>regex::exec::ExecBuilder::build (965,505 samples, 0.53%)</title><rect x="38.9060%" y="421" width="0.5256%" height="15" fill="rgb(220,109,13)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="431.50"></text></g><g><title>regex_syntax::hir::literal::suffixes (965,505 samples, 0.53%)</title><rect x="38.9060%" y="405" width="0.5256%" height="15" fill="rgb(232,18,1)" fg:x="71467718" fg:w="965505"/><text x="39.1560%" y="415.50"></text></g><g><title>rustup::cli::proxy_mode::main (4,112,005 samples, 2.24%)</title><rect x="38.9060%" y="533" width="2.2385%" height="15" fill="rgb(215,41,42)" fg:x="71467718" fg:w="4112005"/><text x="39.1560%" y="543.50">r..</text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="517" width="1.7129%" height="15" fill="rgb(224,123,36)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="527.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="501" width="1.7129%" height="15" fill="rgb(240,125,3)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="511.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="485" width="1.7129%" height="15" fill="rgb(205,98,50)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="495.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="469" width="1.7129%" height="15" fill="rgb(205,185,37)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="479.50"></text></g><g><title>toml::de::from_str (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="453" width="1.7129%" height="15" fill="rgb(238,207,15)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="463.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="437" width="1.7129%" height="15" fill="rgb(213,199,42)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="447.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="421" width="1.7129%" height="15" fill="rgb(235,201,11)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="431.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="405" width="1.7129%" height="15" fill="rgb(207,46,11)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="415.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="389" width="1.7129%" height="15" fill="rgb(241,35,35)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="399.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="373" width="1.7129%" height="15" fill="rgb(243,32,47)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="383.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="357" width="1.7129%" height="15" fill="rgb(247,202,23)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="367.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="341" width="1.7129%" height="15" fill="rgb(219,102,11)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="351.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="325" width="1.7129%" height="15" fill="rgb(243,110,44)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="335.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (3,146,500 samples, 1.71%)</title><rect x="39.4316%" y="309" width="1.7129%" height="15" fill="rgb(222,74,54)" fg:x="72433223" fg:w="3146500"/><text x="39.6816%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="293" width="3.3273%" height="15" fill="rgb(216,99,12)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="303.50">all..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="277" width="3.3273%" height="15" fill="rgb(226,22,26)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="287.50">all..</text></g><g><title>__GI___libc_malloc (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="261" width="3.3273%" height="15" fill="rgb(217,163,10)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="271.50">__G..</text></g><g><title>_int_malloc (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="245" width="3.3273%" height="15" fill="rgb(213,25,53)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="255.50">_in..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="229" width="3.3273%" height="15" fill="rgb(252,105,26)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="239.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="213" width="3.3273%" height="15" fill="rgb(220,39,43)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="223.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="197" width="3.3273%" height="15" fill="rgb(229,68,48)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="207.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="181" width="3.3273%" height="15" fill="rgb(252,8,32)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="191.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="165" width="3.3273%" height="15" fill="rgb(223,20,43)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="175.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="149" width="3.3273%" height="15" fill="rgb(229,81,49)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="159.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="133" width="3.3273%" height="15" fill="rgb(236,28,36)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="143.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="117" width="3.3273%" height="15" fill="rgb(249,185,26)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="127.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="101" width="3.3273%" height="15" fill="rgb(249,174,33)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="111.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="85" width="3.3273%" height="15" fill="rgb(233,201,37)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="95.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="69" width="3.3273%" height="15" fill="rgb(221,78,26)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="79.50">[un..</text></g><g><title>[unknown] (6,112,071 samples, 3.33%)</title><rect x="41.1446%" y="53" width="3.3273%" height="15" fill="rgb(250,127,30)" fg:x="75579723" fg:w="6112071"/><text x="41.3946%" y="63.50">[un..</text></g><g><title>[unknown] (3,092,732 samples, 1.68%)</title><rect x="42.7882%" y="37" width="1.6836%" height="15" fill="rgb(230,49,44)" fg:x="78599062" fg:w="3092732"/><text x="43.0382%" y="47.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,297,558 samples, 5.06%)</title><rect x="41.1446%" y="309" width="5.0615%" height="15" fill="rgb(229,67,23)" fg:x="75579723" fg:w="9297558"/><text x="41.3946%" y="319.50">&lt;&lt;toml..</text></g><g><title>core::ptr::drop_in_place&lt;toml::de::MapVisitor&gt; (3,185,487 samples, 1.73%)</title><rect x="44.4719%" y="293" width="1.7341%" height="15" fill="rgb(249,83,47)" fg:x="81691794" fg:w="3185487"/><text x="44.7219%" y="303.50"></text></g><g><title>__GI___libc_free (3,185,487 samples, 1.73%)</title><rect x="44.4719%" y="277" width="1.7341%" height="15" fill="rgb(215,43,3)" fg:x="81691794" fg:w="3185487"/><text x="44.7219%" y="287.50"></text></g><g><title>_int_free (3,185,487 samples, 1.73%)</title><rect x="44.4719%" y="261" width="1.7341%" height="15" fill="rgb(238,154,13)" fg:x="81691794" fg:w="3185487"/><text x="44.7219%" y="271.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="533" width="6.9076%" height="15" fill="rgb(219,56,2)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="543.50">rustup::c..</text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="517" width="6.9076%" height="15" fill="rgb(233,0,4)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="527.50">rustup::t..</text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="501" width="6.9076%" height="15" fill="rgb(235,30,7)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="511.50">rustup::d..</text></g><g><title>rustup::dist::manifest::Manifest::parse (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="485" width="6.9076%" height="15" fill="rgb(250,79,13)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="495.50">rustup::d..</text></g><g><title>toml::de::from_str (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="469" width="6.9076%" height="15" fill="rgb(211,146,34)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="479.50">toml::de:..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="453" width="6.9076%" height="15" fill="rgb(228,22,38)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="463.50">&lt;toml::de..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="437" width="6.9076%" height="15" fill="rgb(235,168,5)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="447.50">&lt;&lt;toml::v..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="421" width="6.9076%" height="15" fill="rgb(221,155,16)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="431.50">&lt;toml::de..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="405" width="6.9076%" height="15" fill="rgb(215,215,53)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="415.50">&lt;&lt;toml::v..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="389" width="6.9076%" height="15" fill="rgb(223,4,10)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="399.50">&lt;toml::de..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="373" width="6.9076%" height="15" fill="rgb(234,103,6)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="383.50">&lt;&lt;toml::v..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="357" width="6.9076%" height="15" fill="rgb(227,97,0)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="367.50">&lt;toml::de..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="341" width="6.9076%" height="15" fill="rgb(234,150,53)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="351.50">&lt;&lt;toml::v..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (12,688,811 samples, 6.91%)</title><rect x="41.1446%" y="325" width="6.9076%" height="15" fill="rgb(228,201,54)" fg:x="75579723" fg:w="12688811"/><text x="41.3946%" y="335.50">&lt;toml::de..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,391,253 samples, 1.85%)</title><rect x="46.2060%" y="309" width="1.8462%" height="15" fill="rgb(222,22,37)" fg:x="84877281" fg:w="3391253"/><text x="46.4560%" y="319.50">h..</text></g><g><title>toml::de::Deserializer::eat_comment (1,563,998 samples, 0.85%)</title><rect x="48.0522%" y="533" width="0.8514%" height="15" fill="rgb(237,53,32)" fg:x="88268534" fg:w="1563998"/><text x="48.3022%" y="543.50"></text></g><g><title>[unknown] (88,532,772 samples, 48.20%)</title><rect x="1.9268%" y="549" width="48.1960%" height="15" fill="rgb(233,25,53)" fg:x="3539437" fg:w="88532772"/><text x="2.1768%" y="559.50">[unknown]</text></g><g><title>toml::tokens::Tokenizer::basic_string::_{{closure}} (2,239,677 samples, 1.22%)</title><rect x="48.9036%" y="533" width="1.2192%" height="15" fill="rgb(210,40,34)" fg:x="89832532" fg:w="2239677"/><text x="49.1536%" y="543.50"></text></g><g><title>ossl_init_add_all_ciphers_ossl_ (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="373" width="0.7513%" height="15" fill="rgb(241,220,44)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="383.50"></text></g><g><title>openssl_add_all_ciphers_int (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="357" width="0.7513%" height="15" fill="rgb(235,28,35)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="367.50"></text></g><g><title>EVP_add_cipher (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="341" width="0.7513%" height="15" fill="rgb(210,56,17)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="351.50"></text></g><g><title>OBJ_NAME_add (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="325" width="0.7513%" height="15" fill="rgb(224,130,29)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="335.50"></text></g><g><title>OPENSSL_LH_insert (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="309" width="0.7513%" height="15" fill="rgb(235,212,8)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="319.50"></text></g><g><title>obj_name_hash (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="293" width="0.7513%" height="15" fill="rgb(223,33,50)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="303.50"></text></g><g><title>openssl_lh_strcasehash (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="277" width="0.7513%" height="15" fill="rgb(219,149,13)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="287.50"></text></g><g><title>[unknown] (1,380,148 samples, 0.75%)</title><rect x="50.1228%" y="261" width="0.7513%" height="15" fill="rgb(250,156,29)" fg:x="92072209" fg:w="1380148"/><text x="50.3728%" y="271.50"></text></g><g><title>__libc_csu_init (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="517" width="1.4104%" height="15" fill="rgb(216,193,19)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="527.50"></text></g><g><title>curl::INIT_CTOR::init_ctor (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="501" width="1.4104%" height="15" fill="rgb(216,135,14)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="511.50"></text></g><g><title>std::sys_common::once::futex::Once::call (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="485" width="1.4104%" height="15" fill="rgb(241,47,5)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="495.50"></text></g><g><title>curl_global_init (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="469" width="1.4104%" height="15" fill="rgb(233,42,35)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="479.50"></text></g><g><title>ossl_init (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="453" width="1.4104%" height="15" fill="rgb(231,13,6)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="463.50"></text></g><g><title>OPENSSL_init_ssl (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="437" width="1.4104%" height="15" fill="rgb(207,181,40)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="447.50"></text></g><g><title>OPENSSL_init_crypto (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="421" width="1.4104%" height="15" fill="rgb(254,173,49)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="431.50"></text></g><g><title>CRYPTO_THREAD_run_once (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="405" width="1.4104%" height="15" fill="rgb(221,1,38)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="415.50"></text></g><g><title>__pthread_once_slow (2,590,771 samples, 1.41%)</title><rect x="50.1228%" y="389" width="1.4104%" height="15" fill="rgb(206,124,46)" fg:x="92072209" fg:w="2590771"/><text x="50.3728%" y="399.50"></text></g><g><title>ossl_init_config_ossl_ (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="373" width="0.6590%" height="15" fill="rgb(249,21,11)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="383.50"></text></g><g><title>openssl_config_int (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="357" width="0.6590%" height="15" fill="rgb(222,201,40)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="367.50"></text></g><g><title>OPENSSL_init_crypto (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="341" width="0.6590%" height="15" fill="rgb(235,61,29)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="351.50"></text></g><g><title>CRYPTO_THREAD_run_once (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="325" width="0.6590%" height="15" fill="rgb(219,207,3)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="335.50"></text></g><g><title>__pthread_once_slow (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="309" width="0.6590%" height="15" fill="rgb(222,56,46)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="319.50"></text></g><g><title>ossl_init_engine_rdrand_ossl_ (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="293" width="0.6590%" height="15" fill="rgb(239,76,54)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="303.50"></text></g><g><title>ERR_clear_error (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="277" width="0.6590%" height="15" fill="rgb(231,124,27)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="287.50"></text></g><g><title>ERR_get_state (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="261" width="0.6590%" height="15" fill="rgb(249,195,6)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="271.50"></text></g><g><title>OPENSSL_init_crypto (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="245" width="0.6590%" height="15" fill="rgb(237,174,47)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="255.50"></text></g><g><title>CRYPTO_THREAD_run_once (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="229" width="0.6590%" height="15" fill="rgb(206,201,31)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="239.50"></text></g><g><title>__pthread_once_slow (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="213" width="0.6590%" height="15" fill="rgb(231,57,52)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="223.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="197" width="0.6590%" height="15" fill="rgb(248,177,22)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="207.50"></text></g><g><title>err_load_crypto_strings_int (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="181" width="0.6590%" height="15" fill="rgb(215,211,37)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="191.50"></text></g><g><title>ERR_load_PKCS7_strings (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="165" width="0.6590%" height="15" fill="rgb(241,128,51)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="175.50"></text></g><g><title>ERR_load_strings_const (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="149" width="0.6590%" height="15" fill="rgb(227,165,31)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="159.50"></text></g><g><title>OPENSSL_LH_insert (1,210,623 samples, 0.66%)</title><rect x="50.8742%" y="133" width="0.6590%" height="15" fill="rgb(228,167,24)" fg:x="93452357" fg:w="1210623"/><text x="51.1242%" y="143.50"></text></g><g><title>asn1_template_noexp_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="213" width="2.1293%" height="15" fill="rgb(228,143,12)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="223.50">a..</text></g><g><title>asn1_item_embed_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="197" width="2.1293%" height="15" fill="rgb(249,149,8)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="207.50">a..</text></g><g><title>asn1_template_noexp_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="181" width="2.1293%" height="15" fill="rgb(243,35,44)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="191.50">a..</text></g><g><title>asn1_item_embed_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="165" width="2.1293%" height="15" fill="rgb(246,89,9)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="175.50">a..</text></g><g><title>asn1_template_noexp_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="149" width="2.1293%" height="15" fill="rgb(233,213,13)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="159.50">a..</text></g><g><title>asn1_item_embed_d2i (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="133" width="2.1293%" height="15" fill="rgb(233,141,41)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="143.50">a..</text></g><g><title>asn1_d2i_ex_primitive (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="117" width="2.1293%" height="15" fill="rgb(239,167,4)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="127.50">a..</text></g><g><title>asn1_check_tlen (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="101" width="2.1293%" height="15" fill="rgb(209,217,16)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="111.50">a..</text></g><g><title>ASN1_get_object (3,911,354 samples, 2.13%)</title><rect x="51.5332%" y="85" width="2.1293%" height="15" fill="rgb(219,88,35)" fg:x="94662980" fg:w="3911354"/><text x="51.7832%" y="95.50">A..</text></g><g><title>ASN1_item_d2i (7,843,229 samples, 4.27%)</title><rect x="51.5332%" y="245" width="4.2697%" height="15" fill="rgb(220,193,23)" fg:x="94662980" fg:w="7843229"/><text x="51.7832%" y="255.50">ASN1_..</text></g><g><title>asn1_item_embed_d2i (7,843,229 samples, 4.27%)</title><rect x="51.5332%" y="229" width="4.2697%" height="15" fill="rgb(230,90,52)" fg:x="94662980" fg:w="7843229"/><text x="51.7832%" y="239.50">asn1_..</text></g><g><title>x509_cb (3,931,875 samples, 2.14%)</title><rect x="53.6625%" y="213" width="2.1405%" height="15" fill="rgb(252,106,19)" fg:x="98574334" fg:w="3931875"/><text x="53.9125%" y="223.50">x..</text></g><g><title>BIO_puts (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="229" width="2.1541%" height="15" fill="rgb(206,74,20)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="239.50">B..</text></g><g><title>mem_write (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="213" width="2.1541%" height="15" fill="rgb(230,138,44)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="223.50">m..</text></g><g><title>BUF_MEM_grow_clean (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="197" width="2.1541%" height="15" fill="rgb(235,182,43)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="207.50">B..</text></g><g><title>CRYPTO_clear_realloc (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="181" width="2.1541%" height="15" fill="rgb(242,16,51)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="191.50">C..</text></g><g><title>__GI___libc_malloc (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="165" width="2.1541%" height="15" fill="rgb(248,9,4)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="175.50">_..</text></g><g><title>_int_malloc (3,956,860 samples, 2.15%)</title><rect x="55.8030%" y="149" width="2.1541%" height="15" fill="rgb(210,31,22)" fg:x="102506209" fg:w="3956860"/><text x="56.0530%" y="159.50">_..</text></g><g><title>_RNvCsasa3T5feJmt_5cargo8init_git (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="405" width="8.5720%" height="15" fill="rgb(239,54,39)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="415.50">_RNvCsasa3T5..</text></g><g><title>_RNvNtCs7z88o5gUGut_4git24opts27set_verify_owner_validation (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="389" width="8.5720%" height="15" fill="rgb(230,99,41)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="399.50">_RNvNtCs7z88..</text></g><g><title>_RNvCslVRbkoHNgbp_11libgit2_sys4init (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="373" width="8.5720%" height="15" fill="rgb(253,106,12)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="383.50">_RNvCslVRbko..</text></g><g><title>_RINvMs0_NtNtNtCsaqsJ7jMcZrz_3std10sys_common4once5futexNtB6_4Once4callNCINvMs0_NtNtBc_4sync4onceNtB1f_4Once9call_onceNCNvCslVRbkoHNgbp_11libgit2_sys4init0E0EB1V_ (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="357" width="8.5720%" height="15" fill="rgb(213,46,41)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="367.50">_RINvMs0_NtN..</text></g><g><title>git_runtime_init (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="341" width="8.5720%" height="15" fill="rgb(215,133,35)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="351.50">git_runtime_..</text></g><g><title>git_openssl_stream_global_init (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="325" width="8.5720%" height="15" fill="rgb(213,28,5)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="335.50">git_openssl_..</text></g><g><title>X509_STORE_set_default_paths (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="309" width="8.5720%" height="15" fill="rgb(215,77,49)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="319.50">X509_STORE_s..</text></g><g><title>by_file_ctrl (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="293" width="8.5720%" height="15" fill="rgb(248,100,22)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="303.50">by_file_ctrl</text></g><g><title>X509_load_cert_crl_file (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="277" width="8.5720%" height="15" fill="rgb(208,67,9)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="287.50">X509_load_ce..</text></g><g><title>PEM_X509_INFO_read_bio (15,746,205 samples, 8.57%)</title><rect x="51.5332%" y="261" width="8.5720%" height="15" fill="rgb(219,133,21)" fg:x="94662980" fg:w="15746205"/><text x="51.7832%" y="271.50">PEM_X509_INF..</text></g><g><title>PEM_read_bio_ex (7,902,976 samples, 4.30%)</title><rect x="55.8030%" y="245" width="4.3023%" height="15" fill="rgb(246,46,29)" fg:x="102506209" fg:w="7902976"/><text x="56.0530%" y="255.50">PEM_r..</text></g><g><title>BIO_read (3,946,116 samples, 2.15%)</title><rect x="57.9570%" y="229" width="2.1482%" height="15" fill="rgb(246,185,52)" fg:x="106463069" fg:w="3946116"/><text x="58.2070%" y="239.50">B..</text></g><g><title>bio_read_intern (3,946,116 samples, 2.15%)</title><rect x="57.9570%" y="213" width="2.1482%" height="15" fill="rgb(252,136,11)" fg:x="106463069" fg:w="3946116"/><text x="58.2070%" y="223.50">b..</text></g><g><title>bread_conv (3,946,116 samples, 2.15%)</title><rect x="57.9570%" y="197" width="2.1482%" height="15" fill="rgb(219,138,53)" fg:x="106463069" fg:w="3946116"/><text x="58.2070%" y="207.50">b..</text></g><g><title>mem_read (3,946,116 samples, 2.15%)</title><rect x="57.9570%" y="181" width="2.1482%" height="15" fill="rgb(211,51,23)" fg:x="106463069" fg:w="3946116"/><text x="58.2070%" y="191.50">m..</text></g><g><title>__memcpy_avx_unaligned_erms (3,946,116 samples, 2.15%)</title><rect x="57.9570%" y="165" width="2.1482%" height="15" fill="rgb(247,221,28)" fg:x="106463069" fg:w="3946116"/><text x="58.2070%" y="175.50">_..</text></g><g><title>std::rt::lang_start_internal (19,710,284 samples, 10.73%)</title><rect x="51.5332%" y="485" width="10.7300%" height="15" fill="rgb(251,222,45)" fg:x="94662980" fg:w="19710284"/><text x="51.7832%" y="495.50">std::rt::lang_st..</text></g><g><title>_RNCINvNtCsaqsJ7jMcZrz_3std2rt10lang_startuE0Csasa3T5feJmt_5cargo (19,710,284 samples, 10.73%)</title><rect x="51.5332%" y="469" width="10.7300%" height="15" fill="rgb(217,162,53)" fg:x="94662980" fg:w="19710284"/><text x="51.7832%" y="479.50">_RNCINvNtCsaqsJ7..</text></g><g><title>_RINvNtNtCsaqsJ7jMcZrz_3std10sys_common9backtrace28___rust_begin_short_backtraceFEuuECsasa3T5feJmt_5cargo (19,710,284 samples, 10.73%)</title><rect x="51.5332%" y="453" width="10.7300%" height="15" fill="rgb(229,93,14)" fg:x="94662980" fg:w="19710284"/><text x="51.7832%" y="463.50">_RINvNtNtCsaqsJ7..</text></g><g><title>_RNvCsasa3T5feJmt_5cargo4main (19,710,284 samples, 10.73%)</title><rect x="51.5332%" y="437" width="10.7300%" height="15" fill="rgb(209,67,49)" fg:x="94662980" fg:w="19710284"/><text x="51.7832%" y="447.50">_RNvCsasa3T5feJm..</text></g><g><title>_RNvNtCsasa3T5feJmt_5cargo3cli4main (19,710,284 samples, 10.73%)</title><rect x="51.5332%" y="421" width="10.7300%" height="15" fill="rgb(213,87,29)" fg:x="94662980" fg:w="19710284"/><text x="51.7832%" y="431.50">_RNvNtCsasa3T5fe..</text></g><g><title>_RNvNtNtCsasa3T5feJmt_5cargo8commands3run4exec (3,964,079 samples, 2.16%)</title><rect x="60.1052%" y="405" width="2.1580%" height="15" fill="rgb(205,151,52)" fg:x="110409185" fg:w="3964079"/><text x="60.3552%" y="415.50">_..</text></g><g><title>_RNvYNtNtNtNtCscgyLEil1IU3_12clap_builder6parser7matches11arg_matches10ArgMatchesNtNtNtCsdafv1eHZXBe_5cargo4util15command_prelude13ArgMatchesExt15compile_optionsCsasa3T5feJmt_5cargo (3,964,079 samples, 2.16%)</title><rect x="60.1052%" y="389" width="2.1580%" height="15" fill="rgb(253,215,39)" fg:x="110409185" fg:w="3964079"/><text x="60.3552%" y="399.50">_..</text></g><g><title>_RNvYNtNtNtNtCscgyLEil1IU3_12clap_builder6parser7matches11arg_matches10ArgMatchesNtNtNtCsdafv1eHZXBe_5cargo4util15command_prelude13ArgMatchesExt19check_optional_optsCsasa3T5feJmt_5cargo (3,964,079 samples, 2.16%)</title><rect x="60.1052%" y="373" width="2.1580%" height="15" fill="rgb(221,220,41)" fg:x="110409185" fg:w="3964079"/><text x="60.3552%" y="383.50">_..</text></g><g><title>_RNvXs_NtNtCsdafv1eHZXBe_5cargo4util15command_preludeNtNtNtNtCscgyLEil1IU3_12clap_builder6parser7matches11arg_matches10ArgMatchesNtB4_13ArgMatchesExt9__contains (3,964,079 samples, 2.16%)</title><rect x="60.1052%" y="357" width="2.1580%" height="15" fill="rgb(218,133,21)" fg:x="110409185" fg:w="3964079"/><text x="60.3552%" y="367.50">_..</text></g><g><title>_RNvMs0_NtNtNtCscgyLEil1IU3_12clap_builder6parser7matches11arg_matchesNtB5_10ArgMatches15try_contains_id (3,964,079 samples, 2.16%)</title><rect x="60.1052%" y="341" width="2.1580%" height="15" fill="rgb(221,193,43)" fg:x="110409185" fg:w="3964079"/><text x="60.3552%" y="351.50">_..</text></g><g><title>rustup::cli::common::set_globals (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="437" width="0.6107%" height="15" fill="rgb(240,128,52)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="447.50"></text></g><g><title>rustup::cli::term2::stdout (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="421" width="0.6107%" height="15" fill="rgb(253,114,12)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="431.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="405" width="0.6107%" height="15" fill="rgb(215,223,47)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="415.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="389" width="0.6107%" height="15" fill="rgb(248,225,23)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="399.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="373" width="0.6107%" height="15" fill="rgb(250,108,0)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="383.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="357" width="0.6107%" height="15" fill="rgb(228,208,7)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="367.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="341" width="0.6107%" height="15" fill="rgb(244,45,10)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="351.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="325" width="0.6107%" height="15" fill="rgb(207,125,25)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="335.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="309" width="0.6107%" height="15" fill="rgb(210,195,18)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="319.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="293" width="0.6107%" height="15" fill="rgb(249,80,12)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="303.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="277" width="0.6107%" height="15" fill="rgb(221,65,9)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="287.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="261" width="0.6107%" height="15" fill="rgb(235,49,36)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="271.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="245" width="0.6107%" height="15" fill="rgb(225,32,20)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="255.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="229" width="0.6107%" height="15" fill="rgb(215,141,46)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="239.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="213" width="0.6107%" height="15" fill="rgb(250,160,47)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="223.50"></text></g><g><title>[unknown] (1,121,869 samples, 0.61%)</title><rect x="62.2632%" y="197" width="0.6107%" height="15" fill="rgb(216,222,40)" fg:x="114373264" fg:w="1121869"/><text x="62.5132%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustup::toolchain::ToolchainDescWithManifest&gt; (3,703,287 samples, 2.02%)</title><rect x="62.8740%" y="421" width="2.0160%" height="15" fill="rgb(234,217,39)" fg:x="115495133" fg:w="3703287"/><text x="63.1240%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,rustup::dist::manifest::Package)&gt;&gt; (3,703,287 samples, 2.02%)</title><rect x="62.8740%" y="405" width="2.0160%" height="15" fill="rgb(207,178,40)" fg:x="115495133" fg:w="3703287"/><text x="63.1240%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(rustup::dist::dist::TargetTriple,rustup::dist::manifest::TargetedPackage)&gt;&gt; (3,703,287 samples, 2.02%)</title><rect x="62.8740%" y="389" width="2.0160%" height="15" fill="rgb(221,136,13)" fg:x="115495133" fg:w="3703287"/><text x="63.1240%" y="399.50">c..</text></g><g><title>__GI___libc_free (3,703,287 samples, 2.02%)</title><rect x="62.8740%" y="373" width="2.0160%" height="15" fill="rgb(249,199,10)" fg:x="115495133" fg:w="3703287"/><text x="63.1240%" y="383.50">_..</text></g><g><title>_int_free (3,703,287 samples, 2.02%)</title><rect x="62.8740%" y="357" width="2.0160%" height="15" fill="rgb(249,222,13)" fg:x="115495133" fg:w="3703287"/><text x="63.1240%" y="367.50">_..</text></g><g><title>rustup::dist::manifest::TargetedPackage::toml_to_components (3,570,563 samples, 1.94%)</title><rect x="64.8900%" y="357" width="1.9438%" height="15" fill="rgb(244,185,38)" fg:x="119198420" fg:w="3570563"/><text x="65.1400%" y="367.50">r..</text></g><g><title>rustup::dist::manifest::Component::from_toml (3,570,563 samples, 1.94%)</title><rect x="64.8900%" y="341" width="1.9438%" height="15" fill="rgb(236,202,9)" fg:x="119198420" fg:w="3570563"/><text x="65.1400%" y="351.50">r..</text></g><g><title>rustup::utils::toml_utils::get_string (3,570,563 samples, 1.94%)</title><rect x="64.8900%" y="325" width="1.9438%" height="15" fill="rgb(250,229,37)" fg:x="119198420" fg:w="3570563"/><text x="65.1400%" y="335.50">r..</text></g><g><title>rustup::utils::toml_utils::get_value (3,570,563 samples, 1.94%)</title><rect x="64.8900%" y="309" width="1.9438%" height="15" fill="rgb(206,174,23)" fg:x="119198420" fg:w="3570563"/><text x="65.1400%" y="319.50">r..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (3,570,563 samples, 1.94%)</title><rect x="64.8900%" y="293" width="1.9438%" height="15" fill="rgb(211,33,43)" fg:x="119198420" fg:w="3570563"/><text x="65.1400%" y="303.50">a..</text></g><g><title>rustup::dist::manifest::TargetedPackage::from_toml (10,690,751 samples, 5.82%)</title><rect x="64.8900%" y="373" width="5.8199%" height="15" fill="rgb(245,58,50)" fg:x="119198420" fg:w="10690751"/><text x="65.1400%" y="383.50">rustup:..</text></g><g><title>rustup::utils::toml_utils::get_string (7,120,188 samples, 3.88%)</title><rect x="66.8337%" y="357" width="3.8761%" height="15" fill="rgb(244,68,36)" fg:x="122768983" fg:w="7120188"/><text x="67.0837%" y="367.50">rust..</text></g><g><title>rustup::utils::toml_utils::get_value (7,120,188 samples, 3.88%)</title><rect x="66.8337%" y="341" width="3.8761%" height="15" fill="rgb(232,229,15)" fg:x="122768983" fg:w="7120188"/><text x="67.0837%" y="351.50">rust..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (7,120,188 samples, 3.88%)</title><rect x="66.8337%" y="325" width="3.8761%" height="15" fill="rgb(254,30,23)" fg:x="122768983" fg:w="7120188"/><text x="67.0837%" y="335.50">allo..</text></g><g><title>__memcmp_avx2_movbe (7,120,188 samples, 3.88%)</title><rect x="66.8337%" y="309" width="3.8761%" height="15" fill="rgb(235,160,14)" fg:x="122768983" fg:w="7120188"/><text x="67.0837%" y="319.50">__me..</text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1,995,160 samples, 1.09%)</title><rect x="70.7099%" y="341" width="1.0861%" height="15" fill="rgb(212,155,44)" fg:x="129889171" fg:w="1995160"/><text x="70.9599%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,088,298 samples, 0.59%)</title><rect x="71.7960%" y="341" width="0.5925%" height="15" fill="rgb(226,2,50)" fg:x="131884331" fg:w="1088298"/><text x="72.0460%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,088,298 samples, 0.59%)</title><rect x="71.7960%" y="325" width="0.5925%" height="15" fill="rgb(234,177,6)" fg:x="131884331" fg:w="1088298"/><text x="72.0460%" y="335.50"></text></g><g><title>__GI___libc_realloc (1,088,298 samples, 0.59%)</title><rect x="71.7960%" y="309" width="0.5925%" height="15" fill="rgb(217,24,9)" fg:x="131884331" fg:w="1088298"/><text x="72.0460%" y="319.50"></text></g><g><title>_int_realloc (1,088,298 samples, 0.59%)</title><rect x="71.7960%" y="293" width="0.5925%" height="15" fill="rgb(220,13,46)" fg:x="131884331" fg:w="1088298"/><text x="72.0460%" y="303.50"></text></g><g><title>_int_free (1,088,298 samples, 0.59%)</title><rect x="71.7960%" y="277" width="0.5925%" height="15" fill="rgb(239,221,27)" fg:x="131884331" fg:w="1088298"/><text x="72.0460%" y="287.50"></text></g><g><title>toml::de::Deserializer::add_dotted_key (976,950 samples, 0.53%)</title><rect x="72.3885%" y="341" width="0.5318%" height="15" fill="rgb(222,198,25)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (976,950 samples, 0.53%)</title><rect x="72.3885%" y="325" width="0.5318%" height="15" fill="rgb(211,99,13)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (976,950 samples, 0.53%)</title><rect x="72.3885%" y="309" width="0.5318%" height="15" fill="rgb(232,111,31)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="319.50"></text></g><g><title>__GI___libc_malloc (976,950 samples, 0.53%)</title><rect x="72.3885%" y="293" width="0.5318%" height="15" fill="rgb(245,82,37)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="303.50"></text></g><g><title>_int_malloc (976,950 samples, 0.53%)</title><rect x="72.3885%" y="277" width="0.5318%" height="15" fill="rgb(227,149,46)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="287.50"></text></g><g><title>[unknown] (976,950 samples, 0.53%)</title><rect x="72.3885%" y="261" width="0.5318%" height="15" fill="rgb(218,36,50)" fg:x="132972629" fg:w="976950"/><text x="72.6385%" y="271.50"></text></g><g><title>toml::de::Deserializer::eat_newline_or_eof (1,448,677 samples, 0.79%)</title><rect x="72.9203%" y="341" width="0.7886%" height="15" fill="rgb(226,80,48)" fg:x="133949579" fg:w="1448677"/><text x="73.1703%" y="351.50"></text></g><g><title>toml::tokens::Tokenizer::eat_newline_or_eof (1,448,677 samples, 0.79%)</title><rect x="72.9203%" y="325" width="0.7886%" height="15" fill="rgb(238,224,15)" fg:x="133949579" fg:w="1448677"/><text x="73.1703%" y="335.50"></text></g><g><title>toml::tokens::Tokenizer::next (1,448,677 samples, 0.79%)</title><rect x="72.9203%" y="309" width="0.7886%" height="15" fill="rgb(241,136,10)" fg:x="133949579" fg:w="1448677"/><text x="73.1703%" y="319.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1,448,677 samples, 0.79%)</title><rect x="72.9203%" y="293" width="0.7886%" height="15" fill="rgb(208,32,45)" fg:x="133949579" fg:w="1448677"/><text x="73.1703%" y="303.50"></text></g><g><title>&lt;toml::tokens::Token as core::cmp::PartialEq&gt;::eq (2,500,410 samples, 1.36%)</title><rect x="74.3697%" y="325" width="1.3612%" height="15" fill="rgb(207,135,9)" fg:x="136611961" fg:w="2500410"/><text x="74.6197%" y="335.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (8,320,731 samples, 4.53%)</title><rect x="73.7089%" y="341" width="4.5297%" height="15" fill="rgb(206,86,44)" fg:x="135398256" fg:w="8320731"/><text x="73.9589%" y="351.50">toml:..</text></g><g><title>toml::tokens::Tokenizer::next (4,606,616 samples, 2.51%)</title><rect x="75.7309%" y="325" width="2.5078%" height="15" fill="rgb(245,177,15)" fg:x="139112371" fg:w="4606616"/><text x="75.9809%" y="335.50">to..</text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (3,091,076 samples, 1.68%)</title><rect x="76.5559%" y="309" width="1.6827%" height="15" fill="rgb(206,64,50)" fg:x="140627911" fg:w="3091076"/><text x="76.8059%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::expect_spanned (7,808,388 samples, 4.25%)</title><rect x="78.2386%" y="341" width="4.2508%" height="15" fill="rgb(234,36,40)" fg:x="143718987" fg:w="7808388"/><text x="78.4886%" y="351.50">toml:..</text></g><g><title>toml::tokens::Tokenizer::next (4,146,661 samples, 2.26%)</title><rect x="80.2320%" y="325" width="2.2574%" height="15" fill="rgb(213,64,8)" fg:x="147380714" fg:w="4146661"/><text x="80.4820%" y="335.50">t..</text></g><g><title>toml::tokens::Tokenizer::next (1,598,908 samples, 0.87%)</title><rect x="82.4894%" y="341" width="0.8704%" height="15" fill="rgb(210,75,36)" fg:x="151527375" fg:w="1598908"/><text x="82.7394%" y="351.50"></text></g><g><title>toml::de::Deserializer::tables (34,026,719 samples, 18.52%)</title><rect x="70.7099%" y="357" width="18.5237%" height="15" fill="rgb(229,88,21)" fg:x="129889171" fg:w="34026719"/><text x="70.9599%" y="367.50">toml::de::Deserializer::tables</text></g><g><title>toml::tokens::Tokenizer::table_key (10,789,607 samples, 5.87%)</title><rect x="83.3598%" y="341" width="5.8737%" height="15" fill="rgb(252,204,47)" fg:x="153126283" fg:w="10789607"/><text x="83.6098%" y="351.50">toml::t..</text></g><g><title>toml::tokens::Tokenizer::next (8,509,888 samples, 4.63%)</title><rect x="84.6009%" y="325" width="4.6327%" height="15" fill="rgb(208,77,27)" fg:x="155406002" fg:w="8509888"/><text x="84.8509%" y="335.50">toml:..</text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (8,509,888 samples, 4.63%)</title><rect x="84.6009%" y="309" width="4.6327%" height="15" fill="rgb(221,76,26)" fg:x="155406002" fg:w="8509888"/><text x="84.8509%" y="319.50">&lt;toml..</text></g><g><title>toml::de::build_table_indices (2,684,392 samples, 1.46%)</title><rect x="89.2336%" y="357" width="1.4613%" height="15" fill="rgb(225,139,18)" fg:x="163915890" fg:w="2684392"/><text x="89.4836%" y="367.50"></text></g><g><title>__memcmp_avx2_movbe (2,803,414 samples, 1.53%)</title><rect x="92.2096%" y="341" width="1.5261%" height="15" fill="rgb(230,137,11)" fg:x="169382771" fg:w="2803414"/><text x="92.4596%" y="351.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (55,906,104 samples, 30.43%)</title><rect x="64.8900%" y="389" width="30.4345%" height="15" fill="rgb(212,28,1)" fg:x="119198420" fg:w="55906104"/><text x="65.1400%" y="399.50">rustup::dist::manifest::Manifest::parse</text></g><g><title>toml::de::from_str (45,215,353 samples, 24.61%)</title><rect x="70.7099%" y="373" width="24.6146%" height="15" fill="rgb(248,164,17)" fg:x="129889171" fg:w="45215353"/><text x="70.9599%" y="383.50">toml::de::from_str</text></g><g><title>toml::de::build_table_pindices (8,504,242 samples, 4.63%)</title><rect x="90.6949%" y="357" width="4.6296%" height="15" fill="rgb(222,171,42)" fg:x="166600282" fg:w="8504242"/><text x="90.9449%" y="367.50">toml:..</text></g><g><title>core::hash::BuildHasher::hash_one (2,918,339 samples, 1.59%)</title><rect x="93.7358%" y="341" width="1.5887%" height="15" fill="rgb(243,84,45)" fg:x="172186185" fg:w="2918339"/><text x="93.9858%" y="351.50"></text></g><g><title>core::str::converts::from_utf8 (927,425 samples, 0.50%)</title><rect x="95.3245%" y="357" width="0.5049%" height="15" fill="rgb(252,49,23)" fg:x="175104524" fg:w="927425"/><text x="95.5745%" y="367.50"></text></g><g><title>core::str::validations::run_utf8_validation (927,425 samples, 0.50%)</title><rect x="95.3245%" y="341" width="0.5049%" height="15" fill="rgb(215,19,7)" fg:x="175104524" fg:w="927425"/><text x="95.5745%" y="351.50"></text></g><g><title>core::str::validations::contains_nonascii (927,425 samples, 0.50%)</title><rect x="95.3245%" y="325" width="0.5049%" height="15" fill="rgb(238,81,41)" fg:x="175104524" fg:w="927425"/><text x="95.5745%" y="335.50"></text></g><g><title>__libc_start_main_impl (84,903,801 samples, 46.22%)</title><rect x="50.1228%" y="533" width="46.2205%" height="15" fill="rgb(210,199,37)" fg:x="92072209" fg:w="84903801"/><text x="50.3728%" y="543.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (82,313,030 samples, 44.81%)</title><rect x="51.5332%" y="517" width="44.8101%" height="15" fill="rgb(244,192,49)" fg:x="94662980" fg:w="82313030"/><text x="51.7832%" y="527.50">__libc_start_call_main</text></g><g><title>main (82,313,030 samples, 44.81%)</title><rect x="51.5332%" y="501" width="44.8101%" height="15" fill="rgb(226,211,11)" fg:x="94662980" fg:w="82313030"/><text x="51.7832%" y="511.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (62,602,746 samples, 34.08%)</title><rect x="62.2632%" y="485" width="34.0801%" height="15" fill="rgb(236,162,54)" fg:x="114373264" fg:w="62602746"/><text x="62.5132%" y="495.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rustup_init::main (62,602,746 samples, 34.08%)</title><rect x="62.2632%" y="469" width="34.0801%" height="15" fill="rgb(220,229,9)" fg:x="114373264" fg:w="62602746"/><text x="62.5132%" y="479.50">rustup_init::main</text></g><g><title>rustup::cli::proxy_mode::main (62,602,746 samples, 34.08%)</title><rect x="62.2632%" y="453" width="34.0801%" height="15" fill="rgb(250,87,22)" fg:x="114373264" fg:w="62602746"/><text x="62.5132%" y="463.50">rustup::cli::proxy_mode::main</text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (61,480,877 samples, 33.47%)</title><rect x="62.8740%" y="437" width="33.4693%" height="15" fill="rgb(239,43,17)" fg:x="115495133" fg:w="61480877"/><text x="63.1240%" y="447.50">rustup::config::Cfg::find_or_install_override_toolchai..</text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (57,777,590 samples, 31.45%)</title><rect x="64.8900%" y="421" width="31.4533%" height="15" fill="rgb(231,177,25)" fg:x="119198420" fg:w="57777590"/><text x="65.1400%" y="431.50">rustup::toolchain::DistributableToolchain::get_tool..</text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (57,777,590 samples, 31.45%)</title><rect x="64.8900%" y="405" width="31.4533%" height="15" fill="rgb(219,179,1)" fg:x="119198420" fg:w="57777590"/><text x="65.1400%" y="415.50">rustup::dist::manifestation::Manifestation::load_ma..</text></g><g><title>std::fs::read_to_string::inner (1,871,486 samples, 1.02%)</title><rect x="95.3245%" y="389" width="1.0188%" height="15" fill="rgb(238,219,53)" fg:x="175104524" fg:w="1871486"/><text x="95.5745%" y="399.50"></text></g><g><title>std::io::default_read_to_string (1,871,486 samples, 1.02%)</title><rect x="95.3245%" y="373" width="1.0188%" height="15" fill="rgb(232,167,36)" fg:x="175104524" fg:w="1871486"/><text x="95.5745%" y="383.50"></text></g><g><title>std::io::default_read_to_end (944,061 samples, 0.51%)</title><rect x="95.8294%" y="357" width="0.5139%" height="15" fill="rgb(244,19,51)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="367.50"></text></g><g><title>__GI___libc_read (944,061 samples, 0.51%)</title><rect x="95.8294%" y="341" width="0.5139%" height="15" fill="rgb(224,6,22)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="351.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="325" width="0.5139%" height="15" fill="rgb(224,145,5)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="335.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="309" width="0.5139%" height="15" fill="rgb(234,130,49)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="319.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="293" width="0.5139%" height="15" fill="rgb(254,6,2)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="303.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="277" width="0.5139%" height="15" fill="rgb(208,96,46)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="287.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="261" width="0.5139%" height="15" fill="rgb(239,3,39)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="271.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="245" width="0.5139%" height="15" fill="rgb(233,210,1)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="255.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="229" width="0.5139%" height="15" fill="rgb(244,137,37)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="239.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="213" width="0.5139%" height="15" fill="rgb(240,136,2)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="223.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="197" width="0.5139%" height="15" fill="rgb(239,18,37)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="207.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="181" width="0.5139%" height="15" fill="rgb(218,185,22)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="191.50"></text></g><g><title>[unknown] (944,061 samples, 0.51%)</title><rect x="95.8294%" y="165" width="0.5139%" height="15" fill="rgb(225,218,4)" fg:x="176031949" fg:w="944061"/><text x="96.0794%" y="175.50"></text></g><g><title>dl_main (5,360,707 samples, 2.92%)</title><rect x="96.3433%" y="485" width="2.9183%" height="15" fill="rgb(230,182,32)" fg:x="176976010" fg:w="5360707"/><text x="96.5933%" y="495.50">dl..</text></g><g><title>_dl_relocate_object (5,360,707 samples, 2.92%)</title><rect x="96.3433%" y="469" width="2.9183%" height="15" fill="rgb(242,56,43)" fg:x="176976010" fg:w="5360707"/><text x="96.5933%" y="479.50">_d..</text></g><g><title>elf_dynamic_do_Rela (5,360,707 samples, 2.92%)</title><rect x="96.3433%" y="453" width="2.9183%" height="15" fill="rgb(233,99,24)" fg:x="176976010" fg:w="5360707"/><text x="96.5933%" y="463.50">el..</text></g><g><title>elf_machine_rela_relative (3,845,606 samples, 2.09%)</title><rect x="97.1681%" y="437" width="2.0935%" height="15" fill="rgb(234,209,42)" fg:x="178491111" fg:w="3845606"/><text x="97.4181%" y="447.50">e..</text></g><g><title>cargo (183,673,281 samples, 99.99%)</title><rect x="0.0000%" y="565" width="99.9892%" height="15" fill="rgb(227,7,12)" fg:x="0" fg:w="183673281"/><text x="0.2500%" y="575.50">cargo</text></g><g><title>_start (91,601,072 samples, 49.87%)</title><rect x="50.1228%" y="549" width="49.8664%" height="15" fill="rgb(245,203,43)" fg:x="92072209" fg:w="91601072"/><text x="50.3728%" y="559.50">_start</text></g><g><title>_dl_start (6,697,271 samples, 3.65%)</title><rect x="96.3433%" y="533" width="3.6459%" height="15" fill="rgb(238,205,33)" fg:x="176976010" fg:w="6697271"/><text x="96.5933%" y="543.50">_dl_..</text></g><g><title>_dl_start_final (6,697,271 samples, 3.65%)</title><rect x="96.3433%" y="517" width="3.6459%" height="15" fill="rgb(231,56,7)" fg:x="176976010" fg:w="6697271"/><text x="96.5933%" y="527.50">_dl_..</text></g><g><title>_dl_sysdep_start (6,697,271 samples, 3.65%)</title><rect x="96.3433%" y="501" width="3.6459%" height="15" fill="rgb(244,186,29)" fg:x="176976010" fg:w="6697271"/><text x="96.5933%" y="511.50">_dl_..</text></g><g><title>dl_platform_init (1,336,564 samples, 0.73%)</title><rect x="99.2616%" y="485" width="0.7276%" height="15" fill="rgb(234,111,31)" fg:x="182336717" fg:w="1336564"/><text x="99.5116%" y="495.50"></text></g><g><title>init_cpu_features (1,336,564 samples, 0.73%)</title><rect x="99.2616%" y="469" width="0.7276%" height="15" fill="rgb(241,149,10)" fg:x="182336717" fg:w="1336564"/><text x="99.5116%" y="479.50"></text></g><g><title>dl_init_cacheinfo (1,336,564 samples, 0.73%)</title><rect x="99.2616%" y="453" width="0.7276%" height="15" fill="rgb(249,206,44)" fg:x="182336717" fg:w="1336564"/><text x="99.5116%" y="463.50"></text></g><g><title>handle_intel (1,336,564 samples, 0.73%)</title><rect x="99.2616%" y="437" width="0.7276%" height="15" fill="rgb(251,153,30)" fg:x="182336717" fg:w="1336564"/><text x="99.5116%" y="447.50"></text></g><g><title>intel_check_word (1,336,564 samples, 0.73%)</title><rect x="99.2616%" y="421" width="0.7276%" height="15" fill="rgb(239,152,38)" fg:x="182336717" fg:w="1336564"/><text x="99.5116%" y="431.50"></text></g><g><title>all (183,693,109 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(249,139,47)" fg:x="0" fg:w="183693109"/><text x="0.2500%" y="591.50"></text></g><g><title>perf-exec (19,828 samples, 0.01%)</title><rect x="99.9892%" y="565" width="0.0108%" height="15" fill="rgb(244,64,35)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="575.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="549" width="0.0108%" height="15" fill="rgb(216,46,15)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="559.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="533" width="0.0108%" height="15" fill="rgb(250,74,19)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="543.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="517" width="0.0108%" height="15" fill="rgb(249,42,33)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="527.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="501" width="0.0108%" height="15" fill="rgb(242,149,17)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="511.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="485" width="0.0108%" height="15" fill="rgb(244,29,21)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="495.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="469" width="0.0108%" height="15" fill="rgb(220,130,37)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="479.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="453" width="0.0108%" height="15" fill="rgb(211,67,2)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="463.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="437" width="0.0108%" height="15" fill="rgb(235,68,52)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="447.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="421" width="0.0108%" height="15" fill="rgb(246,142,3)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="431.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="405" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="415.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="389" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="399.50"></text></g><g><title>[unknown] (19,828 samples, 0.01%)</title><rect x="99.9892%" y="373" width="0.0108%" height="15" fill="rgb(241,98,45)" fg:x="183673281" fg:w="19828"/><text x="100.2392%" y="383.50"></text></g></svg></svg>